{
  "_args": [
    [
      "react-native-collapsible@git+https://github.com/zapkub/react-native-collapsible.git",
      "/Users/vjtc0n/Desktop/GotitIntern/React/PicuniReactNative"
    ]
  ],
  "_from": "git+https://github.com/zapkub/react-native-collapsible.git",
  "_id": "react-native-collapsible@0.7.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/react-native-collapsible",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/zapkub/react-native-collapsible/master/package.json",
      "gitUrl": "git://github.com/zapkub/react-native-collapsible.git",
      "httpsUrl": "git+https://github.com/zapkub/react-native-collapsible.git",
      "shortcut": "github:zapkub/react-native-collapsible",
      "ssh": "git@github.com:zapkub/react-native-collapsible.git",
      "sshUrl": "git+ssh://git@github.com/zapkub/react-native-collapsible.git",
      "type": "github"
    },
    "name": "react-native-collapsible",
    "raw": "react-native-collapsible@git+https://github.com/zapkub/react-native-collapsible.git",
    "rawSpec": "git+https://github.com/zapkub/react-native-collapsible.git",
    "scope": null,
    "spec": "git+https://github.com/zapkub/react-native-collapsible.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/zapkub/react-native-collapsible.git#00eca39f033f0b2eb3d09170ecbe6e3ad5a66845",
  "_shasum": "b78ef1ba04aef35fd62b68a97232b12d298b0fdc",
  "_shrinkwrap": null,
  "_spec": "react-native-collapsible@git+https://github.com/zapkub/react-native-collapsible.git",
  "_where": "/Users/vjtc0n/Desktop/GotitIntern/React/PicuniReactNative",
  "author": {
    "email": "joel@oblador.se",
    "name": "Joel Arvidsson"
  },
  "bugs": {
    "url": "https://github.com/oblador/react-native-collapsible/issues"
  },
  "dependencies": {},
  "description": "Animated collapsible component for React Native using the Animated API. Good for accordions, toggles etc",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-eslint": "^4.1.6",
    "eslint": "^1.10.3",
    "eslint-plugin-react": "^3.14.0"
  },
  "gitHead": "00eca39f033f0b2eb3d09170ecbe6e3ad5a66845",
  "homepage": "https://github.com/oblador/react-native-collapsible",
  "keywords": [
    "react-native",
    "react-component",
    "react-native-component",
    "react",
    "mobile",
    "ios",
    "android",
    "ui",
    "collapse",
    "collapsible",
    "toggle",
    "accordion"
  ],
  "license": "MIT",
  "main": "Collapsible.js",
  "name": "react-native-collapsible",
  "optionalDependencies": {},
  "readme": "# react-native-collapsible\n*Animated collapsible component for React Native using the Animated API*\n\nPure JavaScript, supports dynamic content heights and components that is aware of its `collapsed` state (good for toggling arrows etc).\n\n## Installation\n\n```\nnpm install --save react-native-collapsible\n```\n\n## Collapsible Usage\n\n```js\nimport Collapsible from 'react-native-collapsible';\n<Collapsible collapsed={isCollapsed}>\n  <SomeCollapsedView />\n</Collapsible>\n```\n\n## Properties\n\n| Prop | Description | Default |\n|---|---|---|\n|**`align`**|Alignment of the content when transitioning, can be `top`, `center` or `bottom`|`top`|\n|**`collapsed`**|Whether to show the child components or not|`true`|\n|**`collapsedHeight`**|Which height should the component collapse to|`0`|\n|**`duration`**|Duration of transition in milliseconds|`300`|\n|**`easing`**|Function or function name from [`Easing`](https://github.com/facebook/react-native/blob/master/Libraries/Animated/src/Easing.js) (or [`tween-functions`](https://github.com/chenglou/tween-functions) if < RN 0.8). Collapsible will try to combine `Easing` functions for you if you name them like `tween-functions`. |`easeOutCubic`|\n\n## Accordion Usage\n\nThis is a convenience component for a common use case, see demo below. \n\n```js\nimport Accordion from 'react-native-collapsible/Accordion';\n<Accordion \n  sections={['Section 1', 'Section 2', 'Section 3']}\n  renderHeader={this._renderHeader}\n  renderContent={this._renderContent}\n/>\n```\n\n## Properties\n\n| Prop | Description |\n|---|---|---|\n|**`sections`**|An array of sections passed to the render methods|\n|**`renderHeader(content, index, isActive)`**|A function that should return a renderable representing the header|\n|**`renderContent(content, index, isActive)`**|A function that should return a renderable representing the content|\n|**`onChange(index)`**|An optional function that is called when currently active section is changed, `index === false` when collapsed|\n|**`initiallyActiveSection`**|Set which index in the `sections` array is initially open. Defaults to none. |\n|**`activeSection`**|Control which index in the `sections` array is currently open. Defaults to none. If false, closes all sections.|\n|**`underlayColor`**|The color of the underlay that will show through when tapping on headers. Defaults to black. |\n|**`align`**|See `Collapsible`|\n|**`duration`**|See `Collapsible`|\n|**`easing`**|See `Collapsible`|\n\n## Demo\n\n![demo](https://cloud.githubusercontent.com/assets/378279/8047315/0237ca2c-0e44-11e5-9a16-1da052406eb0.gif)\n\n## Example \n\nCheck full example in the `Example` folder. \n\n```js\nimport React, { Component } from 'react-native';\nimport Accordion from 'react-native-collapsible/Accordion';\n\nconst SECTIONS = [\n  {\n    title: 'First',\n    content: 'Lorem ipsum...',\n  },\n  {\n    title: 'Second',\n    content: 'Lorem ipsum...',\n  }\n];\n\nclass AccordionView extends Component {\n  _renderHeader(section) {\n    return (\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{section.title}</Text>\n      </View>\n    );\n  }\n\n  _renderContent(section) {\n    return (\n      <View style={styles.content}>\n        <Text>{section.content}</Text>\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <Accordion\n        sections={SECTIONS}\n        renderHeader={this._renderHeader}\n        renderContent={this._renderContent}\n      />\n    );\n  }\n}\n```\n\n### Transition backgrounds\n\nIf you combine with the [`react-native-animatable`](https://github.com/oblador/react-native-animatable) library you can easily transition the background color between the active and inactive state or add animations. \n\nLets augment the example above with:\n```js\nimport * as Animatable from 'react-native-animatable';\n\n(...)\n\n  _renderHeader(section, index, isActive) {\n    return (\n      <Animatable.View\n        style={styles.header}\n        duration={300}\n        transition=\"backgroundColor\"\n        style={{ backgroundColor: (isActive ? 'rgba(255,255,255,1)' : 'rgba(245,252,255,1)') }}>\n        <Text style={styles.headerText}>{section.title}</Text>\n      </Animatable.View>\n    );\n  }\n\n  _renderContent(section, i, isActive) {\n    return (\n      <Animatable.View\n        style={styles.content}\n        duration={300}\n        transition=\"backgroundColor\"\n        style={{ backgroundColor: (isActive ? 'rgba(255,255,255,1)' : 'rgba(245,252,255,1)') }}>\n        <Animatable.Text\n          duration={300}\n          easing=\"ease-out\"\n          animation={isActive ? 'zoomIn' : false}>\n          {section.content}\n        </Animatable.Text>\n      </Animatable.View>\n    );\n  }\n\n(...)\n```\n\nTo produce this (slowed down for visibility): \n\n![accordion-demo](https://cloud.githubusercontent.com/assets/378279/10767769/2ddfe234-7cb4-11e5-8ef1-c0f8c67ead58.gif)\n\n\n## License\n\n[MIT License](http://opensource.org/licenses/mit-license.html). Â© Joel Arvidsson 2015\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://oblador@github.com/oblador/react-native-collapsible.git"
  },
  "scripts": {
    "test": "eslint *.js"
  },
  "version": "0.7.1"
}
